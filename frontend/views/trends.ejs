<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
</head>
<body>

<ul class="nav nav-pills nav-fill" style="margin-left: 233px; margin-right: 233px">
    <li class="nav-item">
      <a class="nav-link" href="/">Home</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="/search">Search</a>
      </li>
    <li class="nav-item">
      <a class="nav-link active" href="/trends">Trends</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="/explore">Explore</a>
    </li>
    
</ul>

<br>

<div id="plot1"></div>

<p id="title2">Number of Collaborators of Top 30 Researchers</p>
<div id="plot2"></div>

<script type="text/javascript" src="https://d3js.org/d3.v5.min.js"></script>
<script src="https://d3js.org/d3-dsv.v1.min.js"></script>
<script src="https://rawgit.com/jasondavies/d3-cloud/master/build/d3.layout.cloud.js"></script>

<script type="text/javascript">
    var parseTime = d3.timeParse("%Y");
    var formatTime = d3.timeFormat("%Y");

    d3.csv("papers_public_num_by_year.csv", function (d) {
        return {
            count: parseInt(d.publication_num),
            year: parseTime(d.year),
            venue: d.venue
        };

    }).then(function (data) {
        plot1(data);
    });

    function plot1(data) {
        var margin = {top: 100, right: 550, bottom: 260, left: 480}
        , width = 2000 - margin.left - margin.right // Use the window's width 
        , height = 900 - margin.top - margin.bottom; // Use the window's height

        var startDate = d3.min(data, function(d) { return d.year; });
        var endDate = d3.max(data, function(d) { return d.year; });

        var xScale = d3.scaleTime()
        .domain([
            d3.timeDay.offset(startDate,-1),
            d3.timeDay.offset(endDate,365)
        ]) // input
        .range([0, width]); // output


        var yScale = d3.scaleLinear()
        .domain([0, d3.max(data, function(d){ return d.count })]) // input 
        .range([height, 0]); // output 

        var line = d3.line()
        .x(function (d) {return xScale(d.year)})
        .y(function (d) {return yScale(d.count)})
        .curve(d3.curveMonotoneX)

        
        
        var svg = d3.select("#plot1").append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
        .append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

        svg.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(d3.axisBottom(xScale)); // Create an axis component with d3.axisBottom

        svg.append("g")
        .attr("class", "y axis")
        .call(d3.axisLeft(yScale)); // Create an axis component with d3.axisLeft

        //add lines
        var ft1 = data.filter(function(d){return d.venue == "ACL"});
        svg.append("path")
        .datum(ft1)
        .attr("class","line")
        .attr("d",line)
        .attr ("fill", "none")
        .attr("stroke", "#FFC300")
        .attr("stroke-width",2);

        svg.selectAll(".dot1")
        .data(ft1)
        .enter().append("circle")
        .attr("fill", "#FFC300")
        .attr("cx", function (d) {
            return xScale(d.year)
        })
        .attr("cy", function (d) {
            return yScale(d.count)
        })
        .attr("r", 4);


        var ft2 = data.filter(function(d){return d.venue == "ACML"});
        svg.append("path")
        .datum(ft2)
        .attr("class","line")
        .attr("d",line)
        .attr ("fill", "none")
        .attr("stroke", "#d63429")
        .attr("stroke-width",2);

        svg.selectAll(".dot2")
        .data(ft2)
        .enter().append("circle")
        .attr("fill", "#d63429")
        .attr("cx", function (d) {
            return xScale(d.year)
        })
        .attr("cy", function (d) {
            return yScale(d.count)
        })
        .attr("r", 4);

        var ft3 = data.filter(function(d){return d.venue == "AISTATS"});
        svg.append("path")
        .datum(ft3)
        .attr("class","line")
        .attr("d",line)
        .attr ("fill", "none")
        .attr("stroke", "#499ee3")
        .attr("stroke-width",2);

        svg.selectAll(".dot2")
        .data(ft3)
        .enter().append("circle")
        .attr("fill", "#499ee3")
        .attr("cx", function (d) {
            return xScale(d.year)
        })
        .attr("cy", function (d) {
            return yScale(d.count)
        })
        .attr("r", 4);

        var ft4 = data.filter(function(d){return d.venue == "COLT"});
        svg.append("path")
        .datum(ft4)
        .attr("class","line")
        .attr("d",line)
        .attr ("fill", "none")
        .attr("stroke", "#a242c2")
        .attr("stroke-width",2);

        svg.selectAll(".dot2")
        .data(ft4)
        .enter().append("circle")
        .attr("fill", "#a242c2")
        .attr("cx", function (d) {
            return xScale(d.year)
        })
        .attr("cy", function (d) {
            return yScale(d.count)
        })
        .attr("r", 4);

        var ft5 = data.filter(function(d){return d.venue == "CVPR"});
        svg.append("path")
        .datum(ft5)
        .attr("class","line")
        .attr("d",line)
        .attr ("fill", "none")
        .attr("stroke", "#e3751b")
        .attr("stroke-width",2);

        svg.selectAll(".dot2")
        .data(ft5)
        .enter().append("circle")
        .attr("fill", "#e3751b")
        .attr("cx", function (d) {
            return xScale(d.year)
        })
        .attr("cy", function (d) {
            return yScale(d.count)
        })
        .attr("r", 4);

        var ft6 = data.filter(function(d){return d.venue == "ECCV"});
        svg.selectAll(".dot2")
        .data(ft6)
        .enter().append("circle")
        .attr("fill", "#8ddb2e")
        .attr("cx", function (d) {
            return xScale(d.year)
        })
        .attr("cy", function (d) {
            return yScale(d.count)
        })
        .attr("r", 4);

        var ft7 = data.filter(function(d){return d.venue == "EMNLP"});
        svg.append("path")
        .datum(ft7)
        .attr("class","line")
        .attr("d",line)
        .attr ("fill", "none")
        .attr("stroke", "#16ccae")
        .attr("stroke-width",2);

        svg.selectAll(".dot2")
        .data(ft7)
        .enter().append("circle")
        .attr("fill", "#16ccae")
        .attr("cx", function (d) {
            return xScale(d.year)
        })
        .attr("cy", function (d) {
            return yScale(d.count)
        })
        .attr("r", 4);

        var ft8 = data.filter(function(d){return d.venue == "ICCV"});
        svg.append("path")
        .datum(ft8)
        .attr("class","line")
        .attr("d",line)
        .attr ("fill", "none")
        .attr("stroke", "#cc1698")
        .attr("stroke-width",2);

        svg.selectAll(".dot2")
        .data(ft8)
        .enter().append("circle")
        .attr("fill", "#cc1698")
        .attr("cx", function (d) {
            return xScale(d.year)
        })
        .attr("cy", function (d) {
            return yScale(d.count)
        })
        .attr("r", 4);

        var ft9 = data.filter(function(d){return d.venue == "ICML"});
        svg.append("path")
        .datum(ft9)
        .attr("class","line")
        .attr("d",line)
        .attr ("fill", "none")
        .attr("stroke", "#189629")
        .attr("stroke-width",2);

        svg.selectAll(".dot2")
        .data(ft9)
        .enter().append("circle")
        .attr("fill", "#189629")
        .attr("cx", function (d) {
            return xScale(d.year)
        })
        .attr("cy", function (d) {
            return yScale(d.count)
        })
        .attr("r", 4);

        var ft10 = data.filter(function(d){return d.venue == "NIPS"});
        svg.append("path")
        .datum(ft10)
        .attr("class","line")
        .attr("d",line)
        .attr ("fill", "none")
        .attr("stroke", "#9dd62b")
        .attr("stroke-width",2);

        svg.selectAll(".dot2")
        .data(ft10)
        .enter().append("circle")
        .attr("fill", "#9dd62b")
        .attr("cx", function (d) {
            return xScale(d.year)
        })
        .attr("cy", function (d) {
            return yScale(d.count)
        })
        .attr("r", 4);

        var ft11 = data.filter(function(d){return d.venue == "WACV"});
        svg.selectAll(".dot2")
        .data(ft11)
        .enter().append("circle")
        .attr("fill", "#f07d9f")
        .attr("cx", function (d) {
            return xScale(d.year)
        })
        .attr("cy", function (d) {
            return yScale(d.count)
        })
        .attr("r", 4);

        //add titles
        svg.append("text")
            .text("Paper Statistics by Year")
            .style("text-anchor", "middle")
            .attr("font-family", "sans-serif")
            .attr("font-size", "26px")
            .attr("font-weight", "bold")
            .attr("x", width / 2)
            .attr("y", -20);

        svg.append("text")
            .text("Year")
            .style("text-anchor", "middle")
            .style("font-size", "16px")
            .attr("transform", "translate(" + (width / 2) + "," + (height+60) + ")")

        svg.append("text")
            .text("Num of publications")
            .style("text-anchor", "middle")
            .style("font-size", "16px")
            .attr("transform", "rotate(-90)")
            .attr("x", -220)
            .attr("y", -80)

        //add legend
        var legend = svg.append("g")
            .attr("class", "legend");

        var legendsymbol = d3.symbol().size(150);

        legend.append("path")
            .attr("transform", function(d){
                return "translate(" + (width) + "," + 60 + ")";})
            .attr("d", legendsymbol.type(d3.symbolCircle))
            .attr("fill", "#FFC300")
            
        legend.append("path")
            .attr("transform", function(d){
                return "translate(" + (width) + "," + 75 + ")";})
            .attr("d", legendsymbol.type(d3.symbolCircle))
            .attr("fill", "#d63429");

        legend.append("path")
            .attr("transform", function(d){
                return "translate(" + (width) + "," + 90 + ")";})
            .attr("d", legendsymbol.type(d3.symbolCircle))
            .attr("fill", "#499ee3");

        legend.append("path")
            .attr("transform", function(d){
                return "translate(" + (width) + "," + 105 + ")";})
            .attr("d", legendsymbol.type(d3.symbolCircle))
            .attr("fill", "#a242c2");
        
        legend.append("path")
            .attr("transform", function(d){
                return "translate(" + (width) + "," + 120 + ")";})
            .attr("d", legendsymbol.type(d3.symbolCircle))
            .attr("fill", "#e3751b");

        legend.append("path")
            .attr("transform", function(d){
                return "translate(" + (width) + "," + 135 + ")";})
            .attr("d", legendsymbol.type(d3.symbolCircle))
            .attr("fill", "#8ddb2e");
        
        legend.append("path")
            .attr("transform", function(d){
                return "translate(" + (width) + "," + 150 + ")";})
            .attr("d", legendsymbol.type(d3.symbolCircle))
            .attr("fill", "#16ccae");
        
        legend.append("path")
            .attr("transform", function(d){
                return "translate(" + (width) + "," + 165 + ")";})
            .attr("d", legendsymbol.type(d3.symbolCircle))
            .attr("fill", "#cc1698");

        legend.append("path")
            .attr("transform", function(d){
                return "translate(" + (width) + "," + 180 + ")";})
            .attr("d", legendsymbol.type(d3.symbolCircle))
            .attr("fill", "#189629");
        
        legend.append("path")
            .attr("transform", function(d){
                return "translate(" + (width) + "," + 195 + ")";})
            .attr("d", legendsymbol.type(d3.symbolCircle))
            .attr("fill", "#9dd62b");

        legend.append("path")
            .attr("transform", function(d){
                return "translate(" + (width) + "," + 210 + ")";})
            .attr("d", legendsymbol.type(d3.symbolCircle))
            .attr("fill", "#f07d9f");

        legend.append("text")
            .attr("x", width+10)
            .attr("y", 50 * 1.3)
            .text("ACL")
            .style("font-size", "15px");

        legend.append("text")
            .attr("x", width+10)
            .attr("y", 50 * 1.6)
            .text("ACML")
            .style("font-size", "15px");
        
        legend.append("text")
            .attr("x", width+10)
            .attr("y", 50 * 1.9)
            .text("AISTATS")
            .style("font-size", "15px");

        legend.append("text")
            .attr("x", width+10)
            .attr("y", 50 * 2.2)
            .text("COLT")
            .style("font-size", "15px");

        legend.append("text")
            .attr("x", width+10)
            .attr("y", 50 * 2.5)
            .text("CVPR")
            .style("font-size", "15px");

        legend.append("text")
            .attr("x", width+10)
            .attr("y", 50 * 2.8)
            .text("ECCV")
            .style("font-size", "15px");
        
        legend.append("text")
            .attr("x", width+10)
            .attr("y", 50 * 3.1)
            .text("EMNLP")
            .style("font-size", "15px");
        
        legend.append("text")
            .attr("x", width+10)
            .attr("y", 50 * 3.4)
            .text("ICCV")
            .style("font-size", "15px");

        legend.append("text")
            .attr("x", width+10)
            .attr("y", 50 * 3.7)
            .text("ICML")
            .style("font-size", "15px");
        
        legend.append("text")
            .attr("x", width+10)
            .attr("y", 50 * 4)
            .text("NIPS")
            .style("font-size", "15px");
        
        legend.append("text")
            .attr("x", width+10)
            .attr("y", 50 * 4.3)
            .text("WACV")
            .style("font-size", "15px");

       

    }





    /*-------------------------------------------------------------------*/
    //plot2

    d3.csv("top_researcher_collaborator.csv", function (d) {
        return {
            author: d.authors,
            num: parseInt(d.number_of_coauthors)
        };

    }).then(function (data) {
        plot2(data);
    });

    function plot2(data) {
        var margin = {top: 150, right: 500, bottom: 200, left: 480}
        , width = 2000 - margin.left - margin.right // Use the window's width 
        , height = 1000 - margin.top - margin.bottom; // Use the window's height

        // d3.select(this)
        // .attr("r", 8);

        var xbarscale = d3.scaleLinear()
            .domain([0, d3.max(data, function (d) {
                return d.num
            })])
            .range([0, width]);

        var ybarscale = d3.scaleBand()
            .domain(data.map(function (d) {
                return d.author;
            }))
            .range([0, height]);

        var svg2 = d3.select("#plot2").append("svg")
            .attr("id", "barchart")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom);

        svg2.selectAll(".bar")
            .data(data)
            .enter()
            .append("rect")
            .attr("x", 420)
            .attr("y", function (d) {
                return ybarscale(d.author) + 3;
            })
            .attr("width", function (d) {
                return xbarscale(d.num);
            })
            .attr("height", ybarscale.bandwidth() - 6)
            .attr("fill", "#4287f5");

        svg2.append("g")
            .attr("transform", "translate(" + 420 + "," + height + ")")
            .attr("class", "x axis")
            .style("font-size", "18px")
            .call(d3.axisBottom(xbarscale));

        svg2.append("g")
            .attr("transform", "translate(" + 420 + "," + 0 + ")")
            .attr("class", "y axis")
            .style("font-size", "18px")
            .call(d3.axisLeft(ybarscale));
        

    }

</script>






<p id="title3">Hot Topics</p>
<script type="text/javascript">

    /*--------------------------------------------------------------------*/
    //word cloud
    function wordCloud(selector) {
        var margin = {top: 400, right: 0, bottom: 150, left: 880}
        , width = window.innerWidth - margin.left - margin.right // Use the window's width 
        , height = window.innerHeight - margin.top - margin.bottom; // Use the window's height
        var fill = d3.scaleOrdinal(d3.schemeCategory10);
        

        //Construct the word cloud's SVG element
        var svg = d3.select(selector).append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
        .append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

        

        
        //Draw the word cloud
        function draw(words) {

            var cloud = svg.selectAll("g text")
                            .data(words, function(d) { return d.text; })

            //Entering words
            cloud.enter()
                .append("text")
                .style("font-family", "Impact")
                .style("fill", function(d, i) { return fill(i); })
                .attr("text-anchor", "middle")
                .attr('font-size', 1)
                .text(function(d) { return d.text; });

            //Entering and existing words
            cloud
                .transition()
                    .duration(1000)
                    .style("font-size", function(d) { return d.size + "px"; })
                    .attr("transform", function(d) {
                        return "translate(" + [d.x, d.y] + ")rotate(" + d.rotate + ")";
                    })
                    .style("fill-opacity", 1);

            //Exiting words
            cloud.exit()
                .transition()
                    .duration(3000)
                    .style('fill-opacity', 1e-6)
                    .attr('font-size', 1)
                    .remove();
        }


        //Use the module pattern to encapsulate the visualisation code. We'll
        // expose only the parts that need to be public.
        return {

            //Recompute the word cloud for a new set of words. This method will
            // asycnhronously call draw when the layout has been computed.
            //The outside world will need to call this function, so make it part
            // of the wordCloud return value.
            update: function(words) {
                d3.layout.cloud().size([800, 800])
                    .words(words)
                    .padding(5)
                    .rotate(function() { return ~~(Math.random() * 2) * 90; })
                    .font("Impact")
                    .fontSize(function(d) { return d.size ; })
                    .on("end", draw)
                    .start();
            }
        }

    }

    //Some sample data - http://en.wikiquote.org/wiki/Opening_lines
    var words = [
    "task,state art,sentence,model,information,dataset,word,text,method,word,relation,performance,approach,training,language,context,framework,system,machine learning",
    "information,text,feature,algorithm,method,sentence,document,different,model,task,data,dataset,representation,embedding,architecture,problem,semantic,machine,learning",
    "data,framework,show,model,based,method,algorithm,neural network, embedding,classification,text,distribution,graph,variable,image,feature,experimental result,single",
    "data,approach,show,word,model,algorithm,method,problem,dataset,information,setting,function,using,framework,performance,result,paper,distribution,structure,text,term",
    "model,image,algorithm,based,problem,representation,semantic,text,graph,information,dataset,show,framework,parameter,domain,architecture,modeling,technique,video",
    "model,algorithm,image,imput,learn,motion,training,data,proposed,framework,video,system,neural network,information,network,object,structure,method,constraint,task",
    "algorithm,neural network,experimental result,image,using,sentence,problem,information,model,object,video,dataset,task,structure,feature,based,distribution,classifier,output",
    "information,neural network,based,experimental result,training,use,using,paper,convolutional neural,feature,different,representation,multiple,extensive experiment,text",
    "image,function,system,structure,large scale,model,neural network,show,training,example,computer vision,task,video,representation,convolutional,method,context,technique",
    "machine learning,classifier,real world,feature,parameter,distribution,using,object,learn,representation,algorithm,information,domain,find,task,structure,input,case,robust",
    "inout,neural network,prediction,provide,image,machine learning,modeling,system,graph,feature,data,domain,using,setting,parameter,show,model,example,large scale,different"
    ]

    //Prepare one of the sample sentences by removing punctuation,
    // creating an array of words and computing a random size attribute.
    function getWords(i) {
        return words[i]

            .split(',')
            .map(function(d) {
                return {text: d, size: 20 + Math.random() * 70};
            })
    }

    //This method tells the word cloud to redraw with a new set of words.
    //In reality the new words would probably come from a server request,
    // user input or some other source.
    function showNewWords(vis, i) {
        i = i || 0;

        vis.update(getWords(i ++ % words.length))
        setTimeout(function() { showNewWords(vis, i + 1)}, 3000)
    }

    //Create a new instance of the word cloud visualisation.
    var myWordCloud = wordCloud('body');

    //Start cycling through the demo data
    showNewWords(myWordCloud);

</script>




<script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
</body>
</html>
